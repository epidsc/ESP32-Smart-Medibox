[
    {
        "id": "d98b354d9a57d362",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ac56945a20837117",
        "type": "mqtt in",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-TEMP",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "437e45794becb494",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1080,
        "y": 580,
        "wires": [
            [
                "b4dfb1e29089dd51",
                "9ef41537a20460d4"
            ]
        ]
    },
    {
        "id": "b4dfb1e29089dd51",
        "type": "ui_gauge",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "84c2e8200b62f470",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1350,
        "y": 540,
        "wires": []
    },
    {
        "id": "9ef41537a20460d4",
        "type": "ui_chart",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "84c2e8200b62f470",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1330,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "56b4f343cc884315",
        "type": "mqtt out",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-UTC",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "437e45794becb494",
        "x": 1280,
        "y": 920,
        "wires": []
    },
    {
        "id": "11b7287c04f527c6",
        "type": "ui_button",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "b7c110a7e69e2d4f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Confirm",
        "tooltip": "Confirm your selection on UTC values",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 440,
        "y": 1000,
        "wires": [
            [
                "2747166b224afb92"
            ]
        ]
    },
    {
        "id": "900764153ea62518",
        "type": "ui_dropdown",
        "z": "d98b354d9a57d362",
        "name": "Timezone Dropdown",
        "label": "Select Timezone",
        "tooltip": "",
        "place": "Select option",
        "group": "b7c110a7e69e2d4f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "UTC +0:00",
                "value": 0,
                "type": "num"
            },
            {
                "label": "UTC +0:30",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "UTC +1:00",
                "value": 1,
                "type": "num"
            },
            {
                "label": "UTC +1:30",
                "value": 1.5,
                "type": "num"
            },
            {
                "label": "UTC +2:00",
                "value": 2,
                "type": "num"
            },
            {
                "label": "UTC +2:30",
                "value": 2.5,
                "type": "num"
            },
            {
                "label": "UTC +3:00",
                "value": 3,
                "type": "num"
            },
            {
                "label": "UTC +3:30",
                "value": 3.5,
                "type": "num"
            },
            {
                "label": "UTC +4:00",
                "value": 4,
                "type": "num"
            },
            {
                "label": "UTC +4:30",
                "value": 4.5,
                "type": "num"
            },
            {
                "label": "UTC +5:00",
                "value": 5,
                "type": "num"
            },
            {
                "label": "UTC +5:30",
                "value": 5.5,
                "type": "num"
            },
            {
                "label": "UTC +6:00",
                "value": 6,
                "type": "num"
            },
            {
                "label": "UTC +6:30",
                "value": 6.5,
                "type": "num"
            },
            {
                "label": "UTC +7:00",
                "value": 7,
                "type": "num"
            },
            {
                "label": "UTC +7:30",
                "value": 7.5,
                "type": "num"
            },
            {
                "label": "UTC +8:00",
                "value": 8,
                "type": "num"
            },
            {
                "label": "UTC +8:30",
                "value": 8.5,
                "type": "num"
            },
            {
                "label": "UTC +9:00",
                "value": 9,
                "type": "num"
            },
            {
                "label": "UTC +9:30",
                "value": 9.5,
                "type": "num"
            },
            {
                "label": "UTC +10:00",
                "value": 10,
                "type": "num"
            },
            {
                "label": "UTC +10:30",
                "value": 10.5,
                "type": "num"
            },
            {
                "label": "UTC +11:00",
                "value": 11,
                "type": "num"
            },
            {
                "label": "UTC +11:30",
                "value": 11.5,
                "type": "num"
            },
            {
                "label": "UTC +12:00",
                "value": 12,
                "type": "num"
            },
            {
                "label": "UTC -0:30",
                "value": -0.5,
                "type": "num"
            },
            {
                "label": "UTC -1:00",
                "value": -1,
                "type": "num"
            },
            {
                "label": "UTC -1:30",
                "value": -1.5,
                "type": "num"
            },
            {
                "label": "UTC -2:00",
                "value": -2,
                "type": "num"
            },
            {
                "label": "UTC -2:30",
                "value": -2.5,
                "type": "num"
            },
            {
                "label": "UTC -3:00",
                "value": -3,
                "type": "num"
            },
            {
                "label": "UTC -3:30",
                "value": -3.5,
                "type": "num"
            },
            {
                "label": "UTC -4:00",
                "value": -4,
                "type": "num"
            },
            {
                "label": "UTC -4:30",
                "value": -4.5,
                "type": "num"
            },
            {
                "label": "UTC -5:00",
                "value": -5,
                "type": "num"
            },
            {
                "label": "UTC -5:30",
                "value": -5.5,
                "type": "num"
            },
            {
                "label": "UTC -6:00",
                "value": -6,
                "type": "num"
            },
            {
                "label": "UTC -6:30",
                "value": -6.5,
                "type": "num"
            },
            {
                "label": "UTC -7:00",
                "value": -7,
                "type": "num"
            },
            {
                "label": "UTC -7:30",
                "value": -7.5,
                "type": "num"
            },
            {
                "label": "UTC -8:00",
                "value": -8,
                "type": "num"
            },
            {
                "label": "UTC -8:30",
                "value": -8.5,
                "type": "num"
            },
            {
                "label": "UTC -9:00",
                "value": -9,
                "type": "num"
            },
            {
                "label": "UTC -9:30",
                "value": -9.5,
                "type": "num"
            },
            {
                "label": "UTC -10:00",
                "value": -10,
                "type": "num"
            },
            {
                "label": "UTC -10:30",
                "value": -10.5,
                "type": "num"
            },
            {
                "label": "UTC -11:00",
                "value": -11,
                "type": "num"
            },
            {
                "label": "UTC -11:30",
                "value": "-11.5",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 400,
        "y": 940,
        "wires": [
            [
                "5301b4823088fe5e"
            ]
        ]
    },
    {
        "id": "2747166b224afb92",
        "type": "change",
        "z": "d98b354d9a57d362",
        "name": "isConfirm",
        "rules": [
            {
                "t": "set",
                "p": "isConfirm",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 1000,
        "wires": [
            [
                "bcbd8d46083c37ec"
            ]
        ]
    },
    {
        "id": "5301b4823088fe5e",
        "type": "change",
        "z": "d98b354d9a57d362",
        "name": "TimeZone",
        "rules": [
            {
                "t": "set",
                "p": "UTC",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 940,
        "wires": [
            [
                "bcbd8d46083c37ec"
            ]
        ]
    },
    {
        "id": "bcbd8d46083c37ec",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "function 7",
        "func": "let Confirm = global.get(\"isConfirm\");\nlet UTC = global.get(\"UTC\");\n\n\nif (Confirm && UTC){\n    return {\n        payload: UTC\n    }\n}\nelse if (Confirm && !UTC){\n    return {\n        payload: \"UTC\"\n    }\n}\nelse if (!Confirm && UTC) {\n    setTimeout(() => {\n        node.send({ payload: \"Confirm\" });\n    }, 1500);\n\n    return null;  // prevent immediate output\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 960,
        "wires": [
            [
                "5236119ff49ef80d"
            ]
        ]
    },
    {
        "id": "5236119ff49ef80d",
        "type": "switch",
        "z": "d98b354d9a57d362",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "eq",
                "v": "UTC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Confirm",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 970,
        "y": 960,
        "wires": [
            [
                "56b4f343cc884315"
            ],
            [
                "030633b4446e131e"
            ],
            [
                "e49d501b5fea4e02"
            ]
        ]
    },
    {
        "id": "dcd476573a1bd413",
        "type": "ui_toast",
        "z": "d98b354d9a57d362",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1460,
        "y": 1000,
        "wires": []
    },
    {
        "id": "030633b4446e131e",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "function 8",
        "func": "\nreturn {\n    payload :  \"Please select valid UTC value\"\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 980,
        "wires": [
            [
                "dcd476573a1bd413"
            ]
        ]
    },
    {
        "id": "e49d501b5fea4e02",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "function 9",
        "func": "\nreturn {\n    payload :  \"Please press 'Confirm' to confirm your selection\"\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1020,
        "wires": [
            [
                "dcd476573a1bd413"
            ]
        ]
    },
    {
        "id": "d21e955c5d22fec4",
        "type": "ui_chart",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "2100a67c96e50964",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 590,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7339cc1222fcf741",
        "type": "mqtt in",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-A-LDR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "437e45794becb494",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 420,
        "y": 540,
        "wires": [
            [
                "d21e955c5d22fec4",
                "721bd153c6f80e5b"
            ]
        ]
    },
    {
        "id": "0406e569bbe610c6",
        "type": "ui_slider",
        "z": "d98b354d9a57d362",
        "name": "",
        "label": "Sampling interval (in seconds)",
        "tooltip": "Slide to adjust the sampling interval",
        "group": "2100a67c96e50964",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 430,
        "y": 800,
        "wires": [
            [
                "879aea16358fc2e6"
            ]
        ]
    },
    {
        "id": "ca12a82bfe4bf05f",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "function 12",
        "func": "let SendingS = Number(global.get(\"sendingIntervalSeconds\")) || 0;\nlet SendingM = Number(global.get(\"sendingIntervalMinutes\")) || 0;\n\nlet Sending = SendingS + (SendingM * 60);\n\nreturn {\n    payload: Sending\n};\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 860,
        "wires": [
            [
                "695855ce4fb09c38"
            ]
        ]
    },
    {
        "id": "695855ce4fb09c38",
        "type": "mqtt out",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-Sending",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "437e45794becb494",
        "x": 1250,
        "y": 860,
        "wires": []
    },
    {
        "id": "a2e27e2cef5a43ba",
        "type": "ui_slider",
        "z": "d98b354d9a57d362",
        "name": "",
        "label": "Sending interval (in seconds)",
        "tooltip": "Slide to adjust the sampling interval",
        "group": "2100a67c96e50964",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "30",
        "step": 1,
        "className": "",
        "x": 440,
        "y": 840,
        "wires": [
            [
                "66f1cf4c8c58f673"
            ]
        ]
    },
    {
        "id": "3b136c7e84590b63",
        "type": "ui_slider",
        "z": "d98b354d9a57d362",
        "name": "",
        "label": "Sending interval (in minutes)",
        "tooltip": "Slide to adjust the sampling interval",
        "group": "2100a67c96e50964",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "10",
        "step": 1,
        "className": "",
        "x": 440,
        "y": 880,
        "wires": [
            [
                "74e67e0951dc010b"
            ]
        ]
    },
    {
        "id": "74e67e0951dc010b",
        "type": "change",
        "z": "d98b354d9a57d362",
        "name": "sendingIntervalMinutes",
        "rules": [
            {
                "t": "set",
                "p": "sendingIntervalMinutes",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 880,
        "wires": [
            [
                "ca12a82bfe4bf05f"
            ]
        ]
    },
    {
        "id": "66f1cf4c8c58f673",
        "type": "change",
        "z": "d98b354d9a57d362",
        "name": "sendingIntervalSeconds",
        "rules": [
            {
                "t": "set",
                "p": "sendingIntervalSeconds",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 840,
        "wires": [
            [
                "ca12a82bfe4bf05f"
            ]
        ]
    },
    {
        "id": "879aea16358fc2e6",
        "type": "change",
        "z": "d98b354d9a57d362",
        "name": "sampliingInterval",
        "rules": [
            {
                "t": "set",
                "p": "sampling",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 800,
        "wires": [
            [
                "46eb0951ca8dc466"
            ]
        ]
    },
    {
        "id": "f96f47a99291036c",
        "type": "ui_gauge",
        "z": "d98b354d9a57d362",
        "name": "Servo Angle",
        "group": "5477d1311bfa7572",
        "order": 4,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Servo Angle (°)",
        "label": "°",
        "format": "{{payload}}",
        "min": 0,
        "max": 180,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1510,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f2e64a7af35b89bb",
        "type": "ui_slider",
        "z": "d98b354d9a57d362",
        "name": "Minimum angle",
        "label": "Minimum angle",
        "tooltip": "",
        "group": "41e0e7255a0f324b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "120",
        "step": 1,
        "className": "",
        "x": 500,
        "y": 1120,
        "wires": [
            [
                "2abc59516ec46a81"
            ]
        ]
    },
    {
        "id": "37a41dcf3b3b2f77",
        "type": "ui_slider",
        "z": "d98b354d9a57d362",
        "name": "Ideal Temperature ",
        "label": "Ideal Temperature ",
        "tooltip": "",
        "group": "41e0e7255a0f324b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "10",
        "max": "40",
        "step": 1,
        "className": "",
        "x": 490,
        "y": 1180,
        "wires": [
            [
                "39c2e0b01ce95d68"
            ]
        ]
    },
    {
        "id": "f5ecd4a2209d6306",
        "type": "ui_slider",
        "z": "d98b354d9a57d362",
        "name": "Controlling Factor",
        "label": "Controlling Factor ",
        "tooltip": "",
        "group": "41e0e7255a0f324b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 490,
        "y": 1240,
        "wires": [
            [
                "567dcd9cf3ed4b66"
            ]
        ]
    },
    {
        "id": "2abc59516ec46a81",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "Minimum angle",
        "func": "let Minimum_angle = parseFloat(msg.payload);\nglobal.set('theta_offset', Number(Minimum_angle));\nreturn { payload: Minimum_angle };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1080,
        "wires": [
            [
                "cf1162e69b956841"
            ]
        ]
    },
    {
        "id": "39c2e0b01ce95d68",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "Ideal temperature ",
        "func": "\n// Try to parse the payload\nlet Ideal_Temperature = parseFloat(msg.payload);\n\n// Save to global context\nglobal.set('tmed', Number(Ideal_Temperature));\n\n// Return value\nreturn { payload: Ideal_Temperature };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1180,
        "wires": [
            [
                "b46471744765b86c"
            ]
        ]
    },
    {
        "id": "567dcd9cf3ed4b66",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "Controlling factor",
        "func": "let Controlling_Factor = parseFloat(msg.payload);\nglobal.set('gamma', Number(Controlling_Factor));\nreturn { payload: Controlling_Factor };\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1240,
        "wires": [
            [
                "381bb76d2c29a418"
            ]
        ]
    },
    {
        "id": "721bd153c6f80e5b",
        "type": "ui_gauge",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "2100a67c96e50964",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "The most recent average light intensity",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 690,
        "y": 580,
        "wires": []
    },
    {
        "id": "46eb0951ca8dc466",
        "type": "function",
        "z": "d98b354d9a57d362",
        "name": "function 10",
        "func": "let Sampling = global.get(\"sampling\");\n\nreturn {\n    payload: Sampling\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 800,
        "wires": [
            [
                "559ed62bd739df80"
            ]
        ]
    },
    {
        "id": "559ed62bd739df80",
        "type": "mqtt out",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-Sampling",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "437e45794becb494",
        "x": 1250,
        "y": 800,
        "wires": []
    },
    {
        "id": "cf1162e69b956841",
        "type": "mqtt out",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-MinAngle",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "437e45794becb494",
        "x": 970,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b46471744765b86c",
        "type": "mqtt out",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-IdealTemp",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "437e45794becb494",
        "x": 960,
        "y": 1160,
        "wires": []
    },
    {
        "id": "381bb76d2c29a418",
        "type": "mqtt out",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-ControlFactor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "437e45794becb494",
        "x": 990,
        "y": 1240,
        "wires": []
    },
    {
        "id": "8ecb9e22cd6e5db8",
        "type": "mqtt in",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-Servo",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "437e45794becb494",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1320,
        "y": 1160,
        "wires": [
            [
                "f96f47a99291036c"
            ]
        ]
    },
    {
        "id": "416eefb5a9ad2df5",
        "type": "ui_chart",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "c78c92a91242fd91",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Battery Usage",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 620,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6350691d930a4a7a",
        "type": "mqtt in",
        "z": "d98b354d9a57d362",
        "name": "",
        "topic": "220563A-%",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "437e45794becb494",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "416eefb5a9ad2df5",
                "5215b954d04cf00a"
            ]
        ]
    },
    {
        "id": "5215b954d04cf00a",
        "type": "ui_gauge",
        "z": "d98b354d9a57d362",
        "name": "",
        "group": "c78c92a91242fd91",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Battery",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#b32d00",
            "#e6e600",
            "#6ccb3a"
        ],
        "seg1": "20",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 600,
        "y": 720,
        "wires": []
    },
    {
        "id": "437e45794becb494",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "84c2e8200b62f470",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "c5fd14390c05d093",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b7c110a7e69e2d4f",
        "type": "ui_group",
        "name": "TimeZone Picker",
        "tab": "c5fd14390c05d093",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2100a67c96e50964",
        "type": "ui_group",
        "name": "Light Intensity",
        "tab": "c5fd14390c05d093",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5477d1311bfa7572",
        "type": "ui_group",
        "name": "Servo",
        "tab": "c5fd14390c05d093",
        "order": 6,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "41e0e7255a0f324b",
        "type": "ui_group",
        "name": "Parameters",
        "tab": "c5fd14390c05d093",
        "order": 7,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c78c92a91242fd91",
        "type": "ui_group",
        "name": "Battery",
        "tab": "c5fd14390c05d093",
        "order": 7,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5fd14390c05d093",
        "type": "ui_tab",
        "name": "Medibox",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]